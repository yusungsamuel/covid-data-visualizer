{"version":3,"sources":["component/navbar/index.js","utilities/API/index.js","utilities/function/index.js","component/forms/index.js","component/racingBar/index.js","component/pieChart/index.js","component/lineChart/index.js","component/legend/index.js","component/dataDisplay/index.js","component/choropleth/index.js","App.js","index.js"],"names":["NavBar","props","className","data-uk-navbar","children","NavItem","href","data-Index","dataIndex","onClick","handleClick","title","covidData","singleState","state","url","axios","allStateCurrent","parseDate","str","toString","split","splice","join","DropDown","onChange","submit","Option","value","option","toUpperCase","RacingBar","racingBarRef","useRef","names","Set","states","map","s","abbreviation","fetchData","a","promise","forEach","push","Promise","all","response","data","r","d","date","obj","name","d3","rank","bars","labels","textTween","axis","ticker","color","play","svg","duration","keyframes","keyframe","transition","ease","x","domain","updateAxis","updateBars","updateLabels","updateTicker","end","scale","some","undefined","category","categoryByName","Map","Array","from","values","get","now","append","style","barSize","attr","width","margin","top","n","text","formatDate","then","g","ticks","tickSizeOuter","tickSizeInner","y","padding","_","call","select","remove","selectAll","b","i","t","this","textContent","formatNumber","label","slice","enter","prev","bandwidth","update","exit","next","tween","bar","sort","length","Math","min","datevalues","d3Arr","Date","ka","kb","nameframes","flatMap","height","right","bottom","left","rangeRound","current","useEffect","sketch","ref","PieChart","LineChart","useState","setState","histoRef","Object","assign","positiveIncrease","nice","range","yAxis","clone","xAxis","line","defined","isNaN","datum","event","preventDefault","choice","target","legend","tickSize","marginTop","marginRight","marginBottom","marginLeft","tickFormat","tickValues","ramp","canvas","HTMLCanvasElement","context","getContext","fillStyle","fillRect","tickAdjust","interpolate","copy","toDataURL","interpolator","round","invertExtent","thresholds","quantiles","toPrecision","thresholdFormat","max","node","DataDisplay","TableRow","stat","possibleChoice","Choropleth","currentData","setCurrentData","setChoice","choroRef","console","log","temp","stateConversion","hospitalized","hospitalizedCurrently","set","death","total","positive","format","path","topojson","us","objects","features","properties","c","key","App","activeIndex","setActiveIndex","e","index","dataset","navigation","parseInt","conditionalRender","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3909f2fc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.scss\"\n\nexport const NavBar = (props) => {\n\n    return (\n        <nav className=\"navbar uk-navbar-transparent uk-navbar-container\" data-uk-navbar>\n            <div className=\"uk-navbar-center\">\n                <ul className=\"uk-navbar-nav\">\n                    {props.children}\n                </ul>\n            </div>\n        </nav>\n\n    )\n};\n\nexport const NavItem = (props) => {\n    return (\n        <li className={props.className}><a className=\"uk-link-reset\" href=\"#\" data-Index={props.dataIndex} onClick={props.handleClick}>{props.title}</a></li>\n    )\n}","import axios from \"axios\";\n\nconst covidData = {\n    singleState: (state) =>{\n        let url = `https://api.covidtracking.com/api/v1/states/${state}/daily.json`\n        return axios({\n            \"method\": \"GET\",\n            \"url\": url\n        })\n\n    },\n    allStateCurrent: ()=>{\n        let url = \"https://api.covidtracking.com/api/v1/states/current.json\"\n        return axios({\n            \"method\": \"GET\",\n            \"url\": url\n        })\n    }\n};\n\nexport default covidData;\n","export const parseDate = (str) => {\n    str = str.toString()\n    str = str.split(\"\");\n    str.splice(4, 0, \"-\");\n    str.splice(7, 0, \"-\");\n    str = (str.join(\"\"));\n\n    return str\n}\n","import React from \"react\";\n\nexport function DropDown(props) {\n    return (\n        <form onChange={props.submit}>\n            <select>\n                {props.children}\n            </select>\n        </form>\n    )\n\n}\n\nexport function Option (props) {\n    return (\n    <option value={props.option}>{props.option.toUpperCase()}</option>\n    )\n}","import React, { useEffect, useRef } from \"react\";\nimport covidData from \"../../utilities/API\";\nimport * as d3 from \"d3\";\nimport * as d3Arr from \"d3-array\";\nimport { parseDate } from \"../../utilities/function\"\nimport states from \"../../states.json\"\nimport { DropDown, Option } from \"../forms\"\nimport \"./style.scss\"\nconst RacingBar = () => {\n    const racingBarRef = useRef(null);\n\n    const names = new Set(states.map(s => s.abbreviation))\n\n    async function fetchData(option) {\n\n        let promise = []\n\n        states.forEach((s) => {\n            if(s !== \"ny\"){\n            promise.push(covidData.singleState(s.abbreviation))\n\n            } \n        })\n\n        let response = await Promise.all(promise)\n\n        let data = [];\n        response.forEach((r) => {\n            r.data.forEach((d) => {\n                if (d.date > 20200228 && d[\"positive\"]) {\n                    let obj = {}\n                    obj.date = parseDate(d.date);\n                    obj.name = d.state;\n                    obj.value = d[\"positive\"].toString()\n                    data.push(d3.autoType(obj))\n                }\n\n            })\n        })\n        return data\n    }\n\n    async function sketch() {\n        let data = await fetchData(\"positive\");\n        const datevalues = Array.from(d3Arr.rollup(data, ([d]) => d.value, d => +d.date, d => d.name))\n            .map(([date, data]) => [new Date(date), data])\n            .sort(([a], [b]) => d3.ascending(a, b))\n\n\n        let n = 12, k = 10;\n        function rank(value) {\n            const data = Array.from(names, name => ({ name, value: value(name.toUpperCase()) }));\n            data.sort((a, b) => d3.descending(a.value, b.value));\n            for (let i = 0; i < data.length; ++i) data[i].rank = Math.min(n, i);\n            return data;\n        }\n\n        //Keyframe to be modularize later\n        const keyframes = [];\n        let ka, a, kb, b;\n        for ([[ka, a], [kb, b]] of d3.pairs(datevalues)) {\n            for (let i = 0; i < k; ++i) {\n                const t = i / k;\n                keyframes.push([\n                    new Date(ka * (1 - t) + kb * t),\n                    rank(name => (a.get(name) || 0) * (1 - t) + (b.get(name) || 0) * t)\n                ]);\n            }\n        }\n        keyframes.push([new Date(kb), rank(name => b.get(name) || 0)]);\n\n\n        const nameframes = d3Arr.groups(keyframes.flatMap(([, data]) => data), d => d.name);\n        const prev = new Map(nameframes.flatMap(([, data]) => d3.pairs(data, (a, b) => [b, a])));\n        const next = new Map(nameframes.flatMap(([, data]) => d3.pairs(data)));\n\n        function bars(svg) {\n            let bar = svg.append(\"g\")\n                .attr(\"fill-opacity\", 0.6)\n                .selectAll(\"rect\");\n            return ([date, data], transition) => bar = bar\n                .data(data.slice(0, n), d => d.name)\n                .join(\n                    enter => enter.append(\"rect\")\n                        .attr(\"fill\", color())\n                        .attr(\"height\", y.bandwidth())\n                        .attr(\"x\", x(0))\n                        .attr(\"y\", d => y((prev.get(d) || d).rank))\n                        .attr(\"width\", d => x((prev.get(d) || d).value) - x(0)),\n                    update => update,\n                    exit => exit.transition(transition).remove()\n                        .attr(\"y\", d => y((next.get(d) || d).rank))\n                        .attr(\"width\", d => x((next.get(d) || d).value) - x(0))\n                )\n                .call(bar => bar.transition(transition)\n                    .attr(\"y\", d => y(d.rank))\n                    .attr(\"width\", d => x(d.value) - x(0)));\n        }\n\n\n        function labels(svg) {\n            let label = svg.append(\"g\")\n                .style(\"font\", \"bold 12px var(--sans-serif)\")\n                .style(\"font-variant-numeric\", \"tabular-nums\")\n                .style(\"text-transform\", \"uppercase\")\n                .attr(\"text-anchor\", \"end\")\n                .selectAll(\"text\");\n\n            return ([date, data], transition) => label = label\n                .data(data.slice(0, n), d => d.name)\n                .join(\n                    enter => enter.append(\"text\")\n                        .attr(\"transform\", d => `translate(${x((prev.get(d) || d).value)},${y((prev.get(d) || d).rank)})`)\n                        .attr(\"y\", y.bandwidth() / 2)\n                        .attr(\"x\", -6)\n                        .attr(\"dy\", \"-0.25em\")\n                        .text(d => d.name)\n                        .call(text => text.append(\"tspan\")\n                            .attr(\"fill-opacity\", 0.7)\n                            .attr(\"font-weight\", \"normal\")\n                            .attr(\"x\", -6)\n                            .attr(\"dy\", \"1.15em\")),\n                    update => update,\n                    exit => exit.transition(transition).remove()\n                        .attr(\"transform\", d => `translate(${x((next.get(d) || d).value)},${y((next.get(d) || d).rank)})`)\n                        .call(g => g.select(\"tspan\").tween(\"text\", d => textTween(d.value, (next.get(d) || d).value)))\n                )\n                .call(bar => bar.transition(transition)\n                    .attr(\"transform\", d => `translate(${x(d.value)},${y(d.rank)})`)\n                    .call(g => g.select(\"tspan\").tween(\"text\", d => textTween((prev.get(d) || d).value, d.value))));\n        }\n\n        const formatNumber = d3.format(\",d\");\n\n        function textTween(a, b) {\n            const i = d3.interpolateNumber(a, b);\n            return function (t) {\n                this.textContent = formatNumber(i(t));\n            };\n        }\n\n\n\n        const margin = ({ top: 16, right: 6, bottom: 6, left: 0 })\n        const barSize = 48;\n        const height = margin.top + barSize * n + margin.bottom;\n        const width = 2.5 * (height)\n\n        const x = d3.scaleLinear([0, 1], [margin.left, width - margin.right])\n        const y = d3.scaleBand()\n            .domain(d3.range(n + 1))\n            .rangeRound([margin.top, margin.top + barSize * (n + 1 + 0.1)])\n            .padding(0.1)\n\n\n        function axis(svg) {\n            const g = svg.append(\"g\")\n                .attr(\"transform\", `translate(0,${margin.top})`);\n\n            const axis = d3.axisTop(x)\n                .ticks(width / 160)\n                .tickSizeOuter(0)\n                .tickSizeInner(-barSize * (n + y.padding()));\n\n            return (_, transition) => {\n                g.transition(transition).call(axis);\n                g.select(\".tick:first-of-type text\").remove();\n                g.selectAll(\".tick:not(:first-of-type) line\").attr(\"stroke\", \"white\");\n                g.select(\".domain\").remove();\n            };\n        }\n\n        const formatDate = d3.utcFormat(\"%Y-%m-%d\")\n\n        function ticker(svg) {\n            const now = svg.append(\"text\")\n                .style(\"font\", `bold ${barSize}px var(--sans-serif)`)\n                .style(\"font-variant-numeric\", \"tabular-nums\")\n                .attr(\"text-anchor\", \"end\")\n                .attr(\"x\", width - 6)\n                .attr(\"y\", margin.top + barSize * (n - 0.45))\n                .attr(\"dy\", \"0.32em\")\n                .text(formatDate(keyframes[0][0]));\n\n            return ([date], transition) => {\n                transition.end().then(() => now.text(formatDate(date)));\n            };\n        }\n\n\n        //color code block\n\n        function color() {\n            const scale = d3.scaleOrdinal(d3.schemeTableau10);\n            if (data.some(d => d.category !== undefined)) {\n                const categoryByName = new Map(data.map(d => [d.name, d.category]))\n                scale.domain(Array.from(categoryByName.values()));\n                return d => scale(categoryByName.get(d.name));\n            }\n            return d => scale(d.name);\n        }\n        const svg = d3.select(racingBarRef.current)\n            .attr(\"viewBox\", [0, 0, width, height]);\n\n        svg.selectAll(\"*\").remove();\n\n        const updateBars = bars(svg);\n        const updateAxis = axis(svg);\n        const updateLabels = labels(svg);\n        const updateTicker = ticker(svg);\n\n\n        async function play(svg) {\n            const duration = 50\n\n            for (const keyframe of keyframes) {\n                const transition = svg.transition()\n                    .duration(duration)\n                    .ease(d3.easeLinear);\n\n                // Extract the top bar’s value.\n                x.domain([0, keyframe[1][0].value]);\n                updateAxis(keyframe, transition);\n                updateBars(keyframe, transition);\n                updateLabels(keyframe, transition);\n                updateTicker(keyframe, transition);\n                await transition.end();\n            }\n        }\n\n        play(svg);\n    }\n\n    useEffect(() => {\n        sketch();\n    }, [])\n\n    return (\n        <div className=\"chart-container\">\n            <h1>Numbers of Positive Cases in the US</h1>\n            <svg className = \"canvas\" ref={racingBarRef}></svg>\n        </div>\n    )\n}\n\nexport default RacingBar;","import React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport covidData from \"../../utilities/API\";\n\n\n\nfunction PieChart() {\n    const svgRef = useRef(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            let response = await covidData.allStateCurrent()\n            let data = response.data\n            data = data.map((d) => {\n                return {\n                    \"name\": d.state,\n                    \"value\": d.positive\n                }\n\n            })\n\n\n            const pie = d3.pie()\n                .padAngle(0.005)\n                .sort(null)\n                .value(d => d.value)\n\n            const arcs = pie(data)\n            console.log(arcs)\n            \n            const width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n            const height = Math.min(width, 1600);\n\n            const color = d3.scaleOrdinal()\n                .domain(data.map(d => d.name))\n                .range(d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), data.length).reverse())\n\n            const radius = Math.min(width, height) / 2;\n            const arc = d3.arc().innerRadius(radius * 0.67).outerRadius(radius - 1);\n\n\n            const svg = d3.select(svgRef.current)\n                .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\n\n\n\n\n            svg.selectAll(\"path\")\n                .data(arcs)\n                .join(\"path\")\n                    .attr(\"fill\", d => color(d.data.name))\n                    .attr(\"d\", arc)\n                    .append(\"title\")\n                        .text(d => `${d.data.name}: ${d.data.value.toLocaleString()}`);\n\n            svg.append(\"g\")\n                .attr(\"font-family\", \"sans-serif\")\n                .attr(\"font-size\", 12)\n                .attr(\"text-anchor\", \"middle\")\n                .selectAll(\"text\")\n                .data(arcs)\n                .join(\"text\")\n                .attr(\"transform\", d => `translate(${arc.centroid(d)})`)\n                .call(text => text.append(\"tspan\")\n                    .attr(\"y\", \"-0.4em\")\n                    .attr(\"font-weight\", \"bold\")\n                    .text(d => d.data.name))\n                .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.25).append(\"tspan\")\n                    .attr(\"x\", 0)\n                    .attr(\"y\", \"0.7em\")\n                    .attr(\"fill-opacity\", 0.7)\n                    .text(d => d.data.value.toLocaleString()));\n\n        }\n\n        fetchData();\n\n    })\n\n\n\n    return (\n        <svg className=\"canvas\" ref={svgRef}></svg>\n    )\n}\n\nexport default PieChart;","import React, { useEffect, useRef, useState } from \"react\";\nimport covidData from \"../../utilities/API\";\nimport * as d3 from \"d3\";\nimport { DropDown, Option } from \"../forms\";\nimport { parseDate } from \"../../utilities/function\"\nimport states from \"../../states.json\";\n\nconst LineChart = () => {\n    const [state, setState] = useState(\"al\")\n    const histoRef = useRef(null);\n    useEffect(() => {\n        const fetchData = async (state) => {\n            let data = (await covidData.singleState(state)).data\n            data = Object.assign(data.map((d) => {\n                return (\n                    d3.autoType({\n                        date: parseDate(d.date),\n                        value: d.positiveIncrease.toString()\n                    })\n                )\n            }), { y: \"Positive Increase\" })\n            return data\n        }\n        const sketch = async () => {\n            let data = await fetchData(state)\n            const height = 300;\n            const width = 3 * height\n            const margin = ({ top: 20, right: 30, bottom: 30, left: 40 });\n\n            const y = d3.scaleLinear()\n                .domain([0, d3.max(data, d => d.value)]).nice()\n                .range([height - margin.bottom, margin.top])\n\n            const yAxis = g => g\n                .attr(\"transform\", `translate(${margin.left},0)`)\n                .call(d3.axisLeft(y))\n                .call(g => g.select(\".domain\").remove())\n                .call(g => g.select(\".tick:last-of-type text\").clone()\n                    .attr(\"x\", 3)\n                    .attr(\"text-anchor\", \"start\")\n                    .attr(\"font-weight\", \"bold\")\n                    .text(data.y))\n\n            const x = d3.scaleUtc()\n                .domain(d3.extent(data, d => d.date))\n                .range([margin.left, width - margin.right])\n\n            const xAxis = g => g\n                .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n                .call(d3.axisBottom(x).ticks(width / 100).tickSizeOuter(0))\n\n\n            const line = d3.line()\n                .defined(d => !isNaN(d.value))\n                .x(d => x(d.date))\n                .y(d => y(d.value))\n\n            const svg = d3.select(histoRef.current)\n                .attr(\"viewBox\", [0, 0, width, height]);\n\n            //clear canvas when re-rendering\n            svg.selectAll(\"*\").remove();\n\n            svg.append(\"g\")\n                .call(xAxis);\n\n            svg.append(\"g\")\n                .call(yAxis);\n\n            svg.append(\"path\")\n                .datum(data)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", \"navy\")\n                .attr(\"stroke-width\", 1.5)\n                .attr(\"stroke-linejoin\", \"round\")\n                .attr(\"stroke-linecap\", \"round\")\n                .attr(\"d\", line);\n        }\n        sketch()\n\n    },[state])\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let choice = event.target.value\n        setState(choice)\n    }\n\n    return (\n\n        <div>\n            <DropDown\n                submit={handleSubmit}\n            >\n                {states.map((state) => {\n                    return (\n                        <Option\n                            option={state.abbreviation}\n                        ></Option>\n                    )\n                })}\n            </DropDown>\n            <svg ref={histoRef}></svg>\n        </div>\n    )\n}\n\nexport default LineChart;","import * as d3 from \"d3\";\n\n\nexport default function legend({\n    color,\n    title,\n    tickSize = 6,\n    width = 320,\n    height = 44 + tickSize,\n    marginTop = 18,\n    marginRight = 0,\n    marginBottom = 16 + tickSize,\n    marginLeft = 0,\n    ticks = width / 64,\n    tickFormat,\n    tickValues\n} = {}) {\n\n    function ramp(color, n = 256) {\n        const canvas = HTMLCanvasElement`<canvas width=${n} height=1>`;\n        const context = canvas.getContext(\"2d\");\n        for (let i = 0; i < n; ++i) {\n            context.fillStyle = color(i / (n - 1));\n            context.fillRect(i, 0, 1, 1);\n        }\n        return canvas;\n    }\n\n    const svg = d3.create(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"viewBox\", [0, 0, width, height])\n        .style(\"overflow\", \"visible\")\n        .style(\"display\", \"block\");\n\n    let tickAdjust = g => g.selectAll(\".tick line\").attr(\"y1\", marginTop + marginBottom - height);\n    let x;\n\n    // Continuous\n    if (color.interpolate) {\n        const n = Math.min(color.domain().length, color.range().length);\n\n        x = color.copy().rangeRound(d3.quantize(d3.interpolate(marginLeft, width - marginRight), n));\n\n        svg.append(\"image\")\n            .attr(\"x\", marginLeft)\n            .attr(\"y\", marginTop)\n            .attr(\"width\", width - marginLeft - marginRight)\n            .attr(\"height\", height - marginTop - marginBottom)\n            .attr(\"preserveAspectRatio\", \"none\")\n            .attr(\"xlink:href\", ramp(color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))).toDataURL());\n    }\n\n    // Sequential\n    else if (color.interpolator) {\n        x = Object.assign(color.copy()\n            .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n            { range() { return [marginLeft, width - marginRight]; } });\n\n        svg.append(\"image\")\n            .attr(\"x\", marginLeft)\n            .attr(\"y\", marginTop)\n            .attr(\"width\", width - marginLeft - marginRight)\n            .attr(\"height\", height - marginTop - marginBottom)\n            .attr(\"preserveAspectRatio\", \"none\")\n            .attr(\"xlink:href\", ramp(color.interpolator()).toDataURL());\n\n        // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n        if (!x.ticks) {\n            if (tickValues === undefined) {\n                const n = Math.round(ticks + 1);\n                tickValues = d3.range(n).map(i => d3.quantile(color.domain(), i / (n - 1)));\n            }\n            if (typeof tickFormat !== \"function\") {\n                tickFormat = d3.format(tickFormat === undefined ? \",f\" : tickFormat);\n            }\n        }\n    }\n\n    // Threshold\n    else if (color.invertExtent) {\n        let thresholds\n            = color.thresholds ? color.thresholds() // scaleQuantize\n                : color.quantiles ? color.quantiles() // scaleQuantile\n                    : color.domain(); // scaleThreshold\n        thresholds = thresholds.map(t=>t.toPrecision(3))\n        const thresholdFormat\n            = tickFormat === undefined ? d => d\n                : typeof tickFormat === \"string\" ? d3.format(tickFormat)\n                    : tickFormat;\n\n        x = d3.scaleLinear()\n            .domain([-1, color.range().length - 1])\n            .rangeRound([marginLeft, width - marginRight]);\n\n        svg.append(\"g\")\n            .selectAll(\"rect\")\n            .data(color.range())\n            .join(\"rect\")\n            .attr(\"x\", (d, i) => x(i - 1))\n            .attr(\"y\", marginTop)\n            .attr(\"width\", (d, i) => x(i) - x(i - 1))\n            .attr(\"height\", height - marginTop - marginBottom)\n            .attr(\"fill\", d => d);\n\n        tickValues = d3.range(thresholds.length);\n        tickFormat = i => thresholdFormat(thresholds[i], i);\n    }\n\n    // Ordinal\n    else {\n        x = d3.scaleBand()\n            .domain(color.domain())\n            .rangeRound([marginLeft, width - marginRight]);\n\n        svg.append(\"g\")\n            .selectAll(\"rect\")\n            .data(color.domain())\n            .join(\"rect\")\n            .attr(\"x\", x)\n            .attr(\"y\", marginTop)\n            .attr(\"width\", Math.max(0, x.bandwidth() - 1))\n            .attr(\"height\", height - marginTop - marginBottom)\n            .attr(\"fill\", color);\n\n        tickAdjust = () => { };\n    }\n\n    svg.append(\"g\")\n        .attr(\"transform\", `translate(0,${height - marginBottom})`)\n        .call(d3.axisBottom(x)\n            .ticks(ticks, typeof tickFormat === \"string\" ? tickFormat : undefined)\n            .tickFormat(typeof tickFormat === \"function\" ? tickFormat : undefined)\n            .tickSize(tickSize)\n            .tickValues(tickValues))\n        .call(tickAdjust)\n        .call(g => g.select(\".domain\").remove())\n        .call(g => g.append(\"text\")\n            .attr(\"x\", marginLeft)\n            .attr(\"y\", marginTop + marginBottom - height - 6)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"font-weight\", \"bold\")\n            .text(title));\n\n    return svg.node();\n}","import React from \"react\";\nimport \"./style.scss\"\n\nexport const DataDisplay = (props) => {\n    return (\n        <div className=\"table\">\n            <div className=\"header\">\n                <div className=\"column\">State</div>\n                <div className=\"column\">Numbers</div>\n            </div>\n            <div className=\"body\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport const TableRow = (props) => {\n    return (\n        <div className=\"row\">\n            <div className=\"column\">{props.name}</div>\n            <div className=\"column\">{props.stat}</div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport us from \"../../states-albers-10m.json\"\nimport covidData from \"../../utilities/API\"\nimport legend from \"../legend\"\nimport { DataDisplay, TableRow } from \"../dataDisplay\"\nimport { DropDown, Option } from \"../forms\"\nimport stateConversion from \"../../state-conversion.json\"\nimport \"./style.scss\"\n\nconst possibleChoice = [\"Percent Positive\", \"Hospitalized Currently\", \"Death\"]\n\nconst Choropleth = () => {\n    const [currentData, setCurrentData] = useState(null);\n    const [choice, setChoice] = useState(\"Percent Positive\")\n    const choroRef = useRef(null);\n\n    const fetchData = async () => {\n        const response = (await covidData.allStateCurrent()).data\n        console.log(response)\n        const data = new Map();\n        let temp = []\n        response.forEach((r) => {\n            const state = stateConversion[r.state]\n            if (!state) return\n            switch (choice) {\n                case \"Hospitalized Currently\":\n                    const hospitalized = (r.hospitalizedCurrently / 100).toPrecision(2)\n                    data.set(state, hospitalized);\n                    temp.push([state, hospitalized])\n                    break\n                case \"Death\":\n                    const death = ((r.death / r.total) * 100).toPrecision(2)\n                    data.set(state, death);\n                    temp.push([state, death])\n                    break\n                default:\n                    const positive = ((r.positive / r.total) * 100).toPrecision(4)\n                    data.set(state, positive);\n                    temp.push([state, positive])\n                    break\n            }\n\n        })\n        setCurrentData(temp)\n        return data\n    }\n\n\n    useEffect(() => {\n\n        async function sketch() {\n            const data = await fetchData()\n            const format = d => `${d}%`\n            const path = d3.geoPath();\n            let color;\n            if (choice === \"Death\") {\n                color = d3.scaleQuantize([0, .5], d3.schemeBlues[9])\n            }\n            else {\n                color = d3.scaleQuantize([0, 20], d3.schemeBlues[9])\n            }\n\n\n            const svg = d3.select(choroRef.current)\n                .attr(\"viewBox\", [0, 0, 975, 610]);\n\n            svg.selectAll(\"*\").remove();\n\n            svg.append(\"g\")\n                .attr(\"transform\", \"translate(610,20)\")\n                .append(() => legend({ color, title: data.title, width: 260 }));\n\n            svg.append(\"g\")\n                .selectAll(\"path\")\n                .data(topojson.feature(us, us.objects.states).features)\n                .join(\"path\")\n                .attr(\"fill\", d => color(data.get(d.properties.name)))\n                .attr(\"d\", path)\n                .append(\"title\")\n                .text(d => `${d.properties.name}\n${format(data.get(d.properties.name))}`);\n\n            //white borderlines\n            svg.append(\"path\")\n                .datum(topojson.mesh(us, us.objects.states, (a, b) => a !== b))\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", \"white\")\n                .attr(\"stroke-linejoin\", \"round\")\n                .attr(\"d\", path);\n\n        }\n        sketch()\n    }, [choice])\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let choice = event.target.value\n        setChoice(choice)\n    }\n\n\n    return (\n        <div className=\"current-data\">\n            <DropDown\n                submit={handleSubmit}\n            >\n                {possibleChoice.map((c, i) => {\n                    return (\n                        <Option\n                            key={i}\n                            option={c}\n                        ></Option>\n                    )\n                })}\n            </DropDown>\n            <DataDisplay>\n                {currentData ? currentData.map((c) => {\n                    return (\n                        <TableRow\n                            name={c[0]}\n                            stat={c[1] + \"%\"}\n                        ></TableRow>\n\n                    )\n                }) : <div></div>}\n            </DataDisplay>\n            <svg className=\"choro\" ref={choroRef}></svg>\n        </div>\n    )\n};\n\nexport default Choropleth;","import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport { NavBar, NavItem } from \"./component/navbar\"\nimport RacingBar from \"./component/racingBar\";\nimport PieChart from \"./component/pieChart\";\nimport LineChart from \"./component/lineChart\"\nimport Choropleth from \"./component/choropleth\"\nimport DataDisplay from \"./component/dataDisplay\"\nimport { active } from 'd3';\n\n\nfunction App() {\n  const navigations = [\"Current Status\", \"Cumulative Counts\", \"Racing Bar Chart\"];\n  const [activeIndex, setActiveIndex] = useState(\"0\");\n  const arr = [Choropleth, LineChart, RacingBar]\n  const handleClick = (e) => {\n    e.preventDefault();\n    const index = e.target.dataset.index\n    setActiveIndex(index)\n    console.log(typeof activeIndex)\n  }\n\n  const conditionalRender = (index) => {\n    switch (index) {\n      case (\"0\"):\n        return (\n            <Choropleth></Choropleth>\n        )\n      case (\"1\"):\n        return (<LineChart></LineChart>)\n      case (\"2\"):\n        return (<RacingBar></RacingBar>)\n      default:\n        return (<Choropleth></Choropleth>)\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n\n      <NavBar>\n        {navigations.map((navigation, i) => {\n          const className = i === parseInt(activeIndex) ? \"navButton-active\" : \"navButton\"\n          return (\n            <NavItem\n              key={i}\n              dataIndex={i}\n              title={navigation}\n              handleClick={handleClick}\n              className={className}\n            ></NavItem>\n          )\n        })}\n      </NavBar>\n      <div className=\"view-box\">\n\n        {conditionalRender(activeIndex)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}